<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_text_basic</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init
/****
ini_open("tk_rampage.ini");
topMargin = ini_read_real( 'SCORE_FMT', 'topMargin', 8 );
bottomMargin = ini_read_real( 'SCORE_FMT', 'bottomMargin', 8 );
leftMargin =  ini_read_real( 'SCORE_FMT', 'leftMargin', 8 );
rightMargin =  ini_read_real( 'SCORE_FMT', 'rightMargin', 8 );
heartX = ini_read_real( 'SCORE_FMT', 'heartX', 8 );
heartY = ini_read_real( 'SCORE_FMT', 'heartY', 8 );
heartScale = ini_read_real( 'SCORE_FMT', 'heartScale', 1 );
heartSpace = ini_read_real( 'SCORE_FMT', 'heartSpace', 1 );
ini_close();
****/

topMargin = 8;
bottomMargin = 8;
leftMargin = 8;
rightMargin = 8;
heartX = 24;
heartY = 24;
heartScale = 2;
heartSpace = 24;

topMargin += (room_height - view_hview[0])/2;//view is smaller than room for screen shake
bottomMargin += (room_height - view_hview[0])/2;
leftMargin += (room_width - view_wview[0])/2;
rightMargin += (room_width - view_wview[0])/2;

fnt=fnt_score;
heart_width = sprite_get_width(spr_heart);
heart_height = sprite_get_height(spr_heart);
margin_l = room_width/8 + 8;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw text
draw_set_font(fnt);
draw_set_color(clr);
draw_set_halign(fa_left);
draw_set_valign(fa_top);
var yy=topMargin;
var xx =leftMargin;

draw_text(leftMargin, topMargin, "SCORE: " + string(global.gamescore));
//draw_text(room_width-160, yy, "POWER: " + string(global.maxweight));

xx = room_width - heartX;
if(instance_exists(obj_player)){
    for(var h=1; h&lt;=obj_player.hp; h++){
        draw_sprite_ext(spr_heart,0,xx,heartY,heartScale,heartScale,0,c_white,1);
        xx-=heartSpace;
    }
}

yy += fnt_height + spacing;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
