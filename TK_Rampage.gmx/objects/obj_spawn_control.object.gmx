<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init
spawn_rate_object = 5;
spawn_rate_truck = 5;
spawn_rate_wave = 15;
spawn_rate_building = 10;
e_count = 10;// Enemies per wave (*2)
rc = room_width/2; // Room center

alarm[0] = room_speed * spawn_rate_object;
alarm[1] = room_speed * spawn_rate_wave;
alarm[2] = room_speed * spawn_rate_truck;
alarm[3] = room_speed * spawn_rate_building;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Spawn building
//tile_add(bg_buildings, 0, 0, 112, 112, 0, 0, -9999);
var b1 = instance_create(0,-10000,obj_building);
var b2 = instance_create(room_width,-10000,obj_building);

b1.sprite_index=choose(spr_building1,spr_building2,spr_building3,spr_building4,spr_building5,spr_building6);
b2.sprite_index=choose(spr_building1,spr_building2,spr_building3,spr_building4,spr_building5,spr_building6);

//b2.image_xscale = -1;

b1.y = b1.sprite_height * -1;
if(b1.sprite_index==spr_building6){
    instance_create(global.bound_l-32, b1.y + 100, obj_donut );
}
if(b1.sprite_index==spr_building2){
    instance_create(global.bound_l-22, b1.y + 132, obj_tire );
}

b2.y = b2.sprite_height * -1;
if(b2.sprite_index==spr_building6){
    instance_create(global.bound_r+32, b2.y + 100, obj_donut );
}
if(b2.sprite_index==spr_building2){
    instance_create(global.bound_r+22, b2.y + 132, obj_tire );
}
var test = 1;
alarm[3]=room_speed*spawn_rate_building;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Spawn vehicle

var xpoint = irandom_range( global.bound_l, global.bound_r );
var thing = instance_create(xpoint,0,obj_vehicle);

if(thing.x-(thing.sprite_width/2) &lt; global.bound_l + global.sidewalk_width){
    thing.x = global.bound_l + (thing.sprite_width/2)  + global.sidewalk_width;
}else if(thing.x+(thing.sprite_width/2) &gt; global.bound_r - global.sidewalk_width){
    thing.x = global.bound_r - (thing.sprite_width/2) - global.sidewalk_width;
}
alarm[2] = room_speed * spawn_rate_truck;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Spawn wave
if(instance_count&lt;300){
    var wave = instance_create(0,0,obj_wave_spawner);
    wave.e_count = e_count + round(global.gamewave * .25);// Number of enemies
    wave.ob = choose(obj_en_disco,obj_en_ninja,obj_en_pirate,obj_en_alien);
    with(wave){
        event_user(0);// Trigger wave
    }
    global.gamewave ++;

}
alarm[1] = room_speed * spawn_rate_wave;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Spawn sidewalk object

var ob = choose(obj_trashcan,obj_tree,obj_bike,obj_meter);

var lx = irandom_range(global.bound_r - global.sidewalk_width, global.bound_r);
var rx = irandom_range(global.bound_l, global.bound_l + global.sidewalk_width);

var cx = choose(lx,rx);

var thing = instance_create(cx,0,ob);
if(thing.x-(thing.sprite_width/2) &lt;global.bound_l){
    thing.x = global.bound_l + (thing.sprite_width/2);
}else if(thing.x+(thing.sprite_width/2) &gt; global.bound_r){
    thing.x = global.bound_r - (thing.sprite_width/2);
}

alarm[0] = room_speed * spawn_rate_object;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
