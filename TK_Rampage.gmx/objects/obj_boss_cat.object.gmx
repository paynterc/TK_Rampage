<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_boss_cat_anm1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_boss</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_boss_cat</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init

// These state values must be higher than the parent class states
enum bossCatState{
    init=100,
    intro1=110,
    intro2=120,
    move1=130,
    move2=140,
    tell1=150,
    tell2=160,
    attack1=170,
    attack2=180,
    stand1=190,
    exploding=200
}
hp = 600;
if(debug_mode){
    hp = 50;
}
state = bossCatState.intro1;
stateTimer=0;
vspd = 0;
movespeedRun = 5;
movespeedPounce = 30;
movespeed = movespeedRun;


// For leap attack
tgtX=noone;
tgtY=noone;

// For wave attack
waveTimer=0;
waveDir=0;

xscaleMod=.75;
yscaleMod=.75

image_xscale=xscaleMod;
image_yscale=yscaleMod;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check HP and Bounding Box

bbr = x + (sprite_width/2);
bbl = x - (sprite_width/2);
bbt = y - (sprite_height/2);
bbb = y + (sprite_height/2);

if(hp&lt;1){   
    state=bossCatState.exploding;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// State machine
switch (state)
{
    case bossCatState.intro1:
        sprite_index = spr_boss_cat_run;
        image_speed = .10;
        y+=5;

        if(bbt&gt;global.bound_t + 8){       
            
            sprite_index = spr_boss_cat_roar;
            image_speed = .5; 
            stateTimer=room_speed * 3;
            audio_play_sound(snd_roar1,1,0);
            state= bossCatState.intro2;
        }   
        break;
    case bossCatState.intro2:
        
        stateTimer--;
        if(!audio_is_playing(snd_roar1)){
            audio_play_sound(snd_roar1,1,0); 
        }
        if(stateTimer&lt;=0){

            sprite_index = spr_boss_cat_run;
            image_speed = .5; 
            stateTimer=room_speed * 3;
            state=bossCatState.move1;
        }
        
        break;
    case bossCatState.move1:

        movespeed = movespeedRun;
        if(x &gt;= room_width -128){
            dir = -1;          
        }else if(x &lt;= 128){       
            dir = 1;
        }
        
        x+=movespeed * dir;
        image_xscale = dir * xscaleMod;
        
        stateTimer--;
        if(stateTimer&lt;=0){
            sprite_index = spr_bos_cat_anm3;
            image_speed = .85;
            
                    // Draw target on ground,then pounce
            if(tgtX==noone){
                if(instance_exists(obj_player)){
                    if(obj_player.x&gt;x){
                        image_xscale = 1 * xscaleMod;
                    }else{
                        image_xscale = -1 * xscaleMod;
                    }
                    tgtX=obj_player.x;
                    tgtY=obj_player.y;
                    
                }else{
                    tgtX=x;
                    tgtY=y;
                }
            }
            instance_create(tgtX,tgtY,obj_crosshairs);
            
            
            
            stateTimer=room_speed * 3;
            state=bossCatState.tell1;
        }
        
        break;
        
    case bossCatState.tell1:
        // Crouching, ready to pounce
    
            
        stateTimer--;
        if(stateTimer&lt;=0){
        
            with(obj_crosshairs){
                instance_destroy();
            }
            sprite_index = spr_boss_cat_leap;
            image_speed = .15;
            stateTimer=room_speed * 3;
            state=bossCatState.attack1;   
        }
        
        break;
        
    case bossCatState.attack1:
        // Leap to target.
        movespeed = movespeedPounce;
        
        if(image_index &gt;= image_number-1){
            image_index = image_number-1;
            image_speed = 0;
        }
        
        if( point_distance(x,y,tgtX,tgtY) &gt; 32 ){
            move_towards_point( tgtX, tgtY, movespeed );
        }else{

            speed=0;
            movespeed = 0;
            sprite_index = spr_boss_cat_anm2;
            image_speed = .85;
            stateTimer=room_speed * 3;
            scr_screen_shake();
            tgtX=noone;
            tgtY=noone;
            state = bossCatState.stand1;  
        }
        

        break;
        
    case bossCatState.stand1:
        stateTimer--;
        if(stateTimer&lt;=0){

        
            // Go to attack 2
            sprite_index = spr_boss_cat_roar;
            image_speed = .5;
            
            waveTimer = 0;
            waveDir=0;
            stateTimer=room_speed * 6;
            state=bossCatState.attack2;
            audio_play_sound(snd_roar1,1,0);
        }
        
        break;
        
    case bossCatState.attack2:
        scr_wave_attack();
        stateTimer--;
        if(!audio_is_playing(snd_roar1)){
            audio_play_sound(snd_roar1,1,0); 
        }
        if(stateTimer&lt;=0){
            sprite_index = spr_boss_cat_run;
            image_speed = .5; 
            stateTimer=room_speed * 3;
            state=bossCatState.move1;
        }

        break;
    case bossCatState.exploding:
        sprite_index = spr_boss_cat_roar;
        image_speed = .5;
        scr_finalboss_explode();
        
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Collide
if other.invul_count &gt; 0 exit;
with(other){
    event_user(0);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
